test <- paste(roost$date[1], '23:59:59')
test
difftime(roost$date, roost$datetime, units='hours')
difftime(roost$datetime, roost$date, units='hours')
strptime(roost$date, "%I:%M %p")
strptime(roost$date[1], "%I:%M %p")
roost$date[1]
strptime(roost$date[1], "%Y-%M-%D %I:%M:%p")
test <- "9:06 AM"
strptime(times, "%I:%M %p")
strptime(test, "%I:%M %p")
test <- "9:06"
strptime(test, "%I:%M %p")
# And then try this again.
roost <- roam.night %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
roost$date[1] + dhours(6)
roost$date[1]
class(roost$date[1])
test <- roost$date[1]
class(test)
ymd_hms(test)
ymd_hms(test, tz='America/Vancouver')
test <- ymd_hms(test, tz='America/Vancouver')
class(test)
test + dhours(6)
roost <- roost %>%
mutate(date=ymd_hms(date, tz='America/Vancouver'))
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver'))
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver') +
dhours(6))
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver') +
dhours(12))
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver') +
dhours(11.99))
# 12 hours
12 *
# 60 minutes per hour
60 *
# 60 seconds per minute
60
# 12 hours
12 *
# 60 minutes per hour
60 *
# 60 seconds per minute
60 -
# Less one to avoid midnight shenanigans
1
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver') +
dseconds(43199))
difftime(roost$midnight[1], roost$datetime[1])
difftime(roost$midnight[1], roost$datetime[1], unit='mins')
difftime(roost$midnight, roost$datetime)
difftime(roost$midnight, roost$datetime, unit='mins')
roost[86]
roost[,86]
roost[86,]
View(roam)
roam %>%
group_by(site, date, dial) %>%
summarize(min=min(time), max=max(time))
difftime(roost$midnight, roost$datetime, unit='hours')
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver') +
dseconds(43199)) %>%
mutate(difs=difftime(midnight, datetime, unit='hours'))
roost %>% summarize(
mean=mean(difs),
min=min(difs),
max=max(difs)
)
roost %>% ungroup() %>% summarize(
mean=mean(difs),
min=min(difs),
max=max(difs)
)
roost <- roam %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
# Calculate sunrise and sunset times for each day.
roam <- getSunlightTimes(data=roam, keep=c('sunrise', 'sunset'),
tz='America/Vancouver')
# Load some libraries.
library('tidyverse')
library('lubridate')
library('suncalc')
# Load in telemetry data.
tel.all <- read.csv('../h_data/processed/h_telem_all.csv', stringsAsFactors=F)
# Pull out the three sites I'm working with.
roam <- tel.all %>%
filter(id %in% c('HAR05', 'HAR04', 'HAR09')) %>%
drop_na(lat)
# Do the datetime thing.
roam$date <- ymd(roam$date)
roam$datetime <- ymd_hms(roam$datetime, tz='America/Vancouver')
roost <- roam %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
# Calculate sunrise and sunset times for each day.
roam <- getSunlightTimes(data=roam, keep=c('sunrise', 'sunset'),
tz='America/Vancouver')
# Classify points as daytime or nighttime.
roam <- roam %>%
mutate(dial=case_when(
datetime < sunset & datetime > sunrise ~ 'day',
TRUE ~ 'night'
))
# Pull out the nighttime points.
roam.night <- roam %>%
filter(dial == 'night')
# And then try this again.
roost <- roam.night %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
roost <- roost %>%
mutate(midnight=ymd_hms(date, tz='America/Vancouver') +
dseconds(43199)) %>%
mutate(difs=difftime(midnight, datetime, unit='hours'))
roost %>% ungroup() %>% summarize(
mean=mean(difs),
min=min(difs),
max=max(difs)
)
roam$datetime[1]
ymd(roam$datetime[1])
day(roam$datetime[1])
(tel.all$datetime[1]
)
4+2
tel.all$datetime[1]
ymd(tel.all$datetime[1])
tel.all$date[1]
ymd(tel.all$date[1])
# Pull out the three sites I'm working with.
roam <- tel.all %>%
filter(id %in% c('HAR05', 'HAR04', 'HAR09')) %>%
drop_na(lat)
View(roam)
roost <- roam %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
View(roost)
roam %>% mutate(date=paste(date, '23:59:59'))
roam %>% mutate(date=paste(date, '23:59:59')) %>%
mutate(date=ymd_hms(date, tz='America/Vancouver'))
roam <- roam %>% mutate(date=paste(date, '23:59:59')) %>%
mutate(date=ymd_hms(date, tz='America/Vancouver'))
class(roam$date)
roam <- roam %>% mutate(date=paste(date, '23:59:59')) %>%
mutate(date=ymd_hms(date, tz='America/Vancouver'),
datetime=ymd_hms(datetime, tz='America/Vancouver'))
# Pull out the three sites I'm working with.
roam <- tel.all %>%
filter(id %in% c('HAR05', 'HAR04', 'HAR09')) %>%
drop_na(lat)
roost <- roam %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
roost2 <- roost %>% mutate(date=paste(date, '23:59:59'))
roost2 <- roost %>% mutate(midnight=paste(date, '23:59:59'))
View(roost2)
roost2 <- roost %>% mutate(midnight=paste(date, '23:59:59')) %>%
mutate(midnight=ymd_hms(midnight, tz='America/Vancouver'))
class(roost2$midnight)
roost2 <- roost %>% mutate(midnight=paste(date, '23:59:59')) %>%
mutate(midnight=ymd_hms(midnight, tz='America/Vancouver')) %>%
mutate(datetime=ymd_hms(datetime, tz='America/Vancouver'))
class(roost2$datetime)
roost2 <- roost %>% mutate(midnight=paste(date, '23:59:59')) %>%
mutate(midnight=ymd_hms(midnight, tz='America/Vancouver')) %>%
mutate(datetime=ymd_hms(datetime, tz='America/Vancouver')) %>%
mutate(difftime(midnight, datetime, unit='hours'))
roost2 %>% ungroup() %>% summarize(
mean=mean(difs),
min=min(difs),
max=max(difs)
)
roost2 <- roost %>% mutate(midnight=paste(date, '23:59:59')) %>%
mutate(midnight=ymd_hms(midnight, tz='America/Vancouver')) %>%
mutate(datetime=ymd_hms(datetime, tz='America/Vancouver')) %>%
mutate(difs=difftime(midnight, datetime, unit='hours'))
roost2 %>% ungroup() %>% summarize(
mean=mean(difs),
min=min(difs),
max=max(difs)
)
# Do math.
roost <- roost %>% mutate(midnight=paste(date, '23:59:59')) %>%
mutate(midnight=ymd_hms(midnight, tz='America/Vancouver')) %>%
mutate(datetime=ymd_hms(datetime, tz='America/Vancouver')) %>%
mutate(difs=difftime(midnight, datetime, unit='hours'))
roost$difs
hist(roost$difs)
hist(as.numeric(roost$difs))
hist(as.numeric(roost$difs, breaks=1))
# Pull out the three sites I'm working with.
roam <- tel.all %>%
filter(id %in% c('HAR05', 'HAR04', 'HAR09')) %>%
drop_na(lat)
# Pick the last observation of the day.
roost <- roam %>%
group_by(site, date) %>%
filter(datetime == max(datetime))
# Do math.
roost <- roost %>% mutate(midnight=paste(date, '23:59:59')) %>%
mutate(midnight=ymd_hms(midnight, tz='America/Vancouver')) %>%
mutate(datetime=ymd_hms(datetime, tz='America/Vancouver')) %>%
mutate(difs=difftime(midnight, datetime, unit='hours'))
# Check.
roost %>% ungroup() %>% summarize(
mean=mean(difs),
min=min(difs),
max=max(difs)
)
roost %>% filter(difs < 4)
roost <- roost %>% filter(difs < 4)
# And save it.
write.csv(roost, '../h_data/processed/used_2.csv')
roost <- roost %>% filter(difs < 4)
# And save it.
write.csv(roost, '../h_data/processed/used_2.csv')
sites <- read.csv('../data/raw/intensives.csv', stringsAsFactors=FALSE)
sites <- read.csv('../h_data/raw/intensives.csv', stringsAsFactors=FALSE)
View(sites)
sites <- read.csv('../h_data/raw/intensives.csv', stringsAsFactors=FALSE)
View(sites)
# Load libraries
library('tidyverse')
sites %>% dplyr::select(m_tag, f_tag) %>%
drop_na()
tags <- sites %>% dplyr::select(m_tag, f_tag)
class(tags)
tags <- sites %>% dplyr::select(m_tag, f_tag) %>%
as.list()
class(tags)
tags
tags <- sites %>% dplyr::select(m_tag, f_tag)
unique(tags)
class(tags)
unique(tags) %>%
drop_na()
tags <- sites %>% dplyr::select(m_tag, f_tag) %>%
summarise(n_distinct())
tags <- sites %>% dplyr::select(m_tag, f_tag) %>%
summarise(n_distinct(m_tag, f_tag))
4+5
class(tags)
tags <- sites %>% dplyr::select(m_tag, f_tag) %>%
summarise(n_distinct(m_tag))
n_distinct(tags)
tags <- sites %>% dplyr::select(m_tag, f_tag)
n_distinct(tags)
View(tags)
tags <- sites %>% dplyr::select(m_tag, f_tag) %>%
n_distinct()
tags
# Load libraries
library('tidyverse')
sites <- read.csv('../h_data/raw/intensives.csv', stringsAsFactors=FALSE)
View(sites)
n_distinct(sites$site)
sites %>% filter(tag==1)
sites %>% filter(tag==1) %>%
n_distinct(site)
sites %>% filter(tag==1) %>%
n_distinct()
sites %>% filter(tag==1) %>%
dplyr::select(site)
sites %>% filter(tag==1) %>%
dplyr::select(site) %>%
n_distinct()
s.dist <- sites %>% filter(tag==1) %>%
dplyr::select(site) %>%
n_distinct()
sites %>% dplyr::select(m_tag) %>%
n_distinct()
sites %>% dplyr::select(m_tag)
sites %>% dplyr::select(m_tag) %>% na_omit()
sites %>% dplyr::select(m_tag) %>% drop_na()
sites %>% dplyr::select(m_tag) %>% drop_na() %>% n_distinct()
used <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
used <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
used <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
View(avail)
old <- read.csv('../h_data/interim/points.csv', stringsAsFactors=FALSE)
View(old)
avail2 %>% dplyr::select(xcoord=xcoord, ycoord=ycoord, canopy.closure=CR_CLOSURE,
basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab,
site=site)
avail2 <- avail %>% dplyr::select(xcoord=xcoord, ycoord=ycoord, canopy.closure=CR_CLOSURE,
basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab,
site=site)
View(avail2)
plot(avail2, x=xcoord, y=ycoord)
plot(avail2)
library(ggplot2)
ggplot(avail2, aes(x=xcoord, y=ycoord)) +
geom_point()
avail2 <- avail %>% dplyr::select(xcoord=xcoord, ycoord=ycoord, canopy.closure=CR_CLOSURE,
basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab,
site=site) %>%
mutate(case=0)
avail <- avail %>% dplyr::select(xcoord=xcoord, ycoord=ycoord, canopy.closure=CR_CLOSURE,
basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab,
site=site) %>%
mutate(case=0)
View(used)
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
View(avail)
used2 <- used %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site)
View(used2)
used2 <- used %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
points <- r_bind(used, avail)
points <- bind_rows(used, avail)
View(points)
points %>% filter(case==1) %>% sum()
points %>% filter(case==1) %>% summarise(n())
locs(n())
locs %>% summarise(n())
min(locs$datetime)
library(lubridate)
min(locs$datetime) %>% month()
min(locs$datetime) %>% month(label=TRUE)
min(locs$datetime) %>% month(label=TRUE, abbr=FALSE)
# Load libraries
library('tidyverse')
sites <- read.csv('../h_data/raw/intensives.csv', stringsAsFactors=FALSE)
library('lubridate')
# Load in used and available points.
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
# Clean up the messy datasets.
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
# Combine.
points <- bind_rows(used, avail)
length(locs)
length(locs$id)
min(locs$datetime) %>% day()
locs %>% group_by(site) %>% summarise(n())
locs %>% group_by(site) %>% summarise(n=n())
locs %>% group_by(site) %>% summarise(n=n())
library('knitr')
locs %>% group_by(site) %>% summarise(n=n()) %>% kable()
library('lubridate')
library('knitr')
# Load in used and available points.
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
# Clean up the messy datasets.
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
# Combine.
points <- bind_rows(used, avail)
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'), full_width=FALSE, position='float-left')
library('kableExtra')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'), full_width=FALSE, position='float-left')
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'), full_width=FALSE, position='float-left')
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'), full_width = F, position = "float_right")
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'), full_width = F, position = "float_right")
warnings()
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable_styling(col.names=c('Site Name', 'N. roosts'))
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'))
# Load libraries
library('tidyverse')
sites <- read.csv('../h_data/raw/intensives.csv', stringsAsFactors=FALSE)
library('lubridate')
library('knitr')
library('kableExtra')
# Load in used and available points.
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
# Clean up the messy datasets.
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
# Combine.
points <- bind_rows(used, avail)
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'))
library('lubridate')
# Load in used and available points.
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
# Clean up the messy datasets.
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
# Combine.
points <- bind_rows(used, avail)
library('knitr')
library('kableExtra')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable(col.names=c('Site Name', 'N. roosts'))
library('knitr')
library('kableExtra')
# Summary table.
roost.sum <- locs %>% group_by(site) %>% summarise(n=n())
kable(roost.sum, col.names=c('Site Name', 'N. roosts'))
library('knitr')
library('kableExtra')
# Summary table.
roost.sum <- locs %>% group_by(site) %>% summarise(n=n())
kable(roost.sum)
kable_styling(roost.sum)
kable(roost.sum) %>% kable_styling()
kable(roost.sum) %>% kable_styling(full_width=FALSE)
kable(roost.sum) %>% kable_styling(full_width=FALSE, position='float_left')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable() %>%
kable_styling(full_width=FALSE, position='float_left')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>% kable() %>%
kable_styling(full_width=FALSE, position='float_left')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>%
kable(col.names=c('Site name', 'n roosts')) %>%
kable_styling(full_width=FALSE, position='float_left')
library('lubridate')
library('knitr')
library('kableExtra')
# Load in used and available points.
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
# Clean up the messy datasets.
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
# Combine.
points <- bind_rows(used, avail)
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>%
kable(col.names=c('Site abbr.', 'N. roosts')) %>%
kable_styling(full_width=FALSE, position='float_left')
roost.sum %>% dplyr::select(n) %>%
kable(col.names=c('Site abbr.', 'N. roosts')) %>%
kable_styling(full_width=FALSE, position='float_left')
roost.sum %>% dplyr::select(n) %>%
kable(col.names='N. roosts') %>%
kable_styling(full_width=FALSE, position='float_left')
View(roost.sum)
roost.sum %>% dplyr::select(n) %>%
kable(col.names='N. roosts', row.names=c('Mt. Currie', 'Ruby Lake', 'Skaiakos')) %>%
kable_styling(full_width=FALSE, position='float_left')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>%
kable(col.names=c('Site abbr.', 'N. roosts')) %>%
kable_styling(full_width=FALSE, position='float_left')
install.packages('bookdown')
library('bookdown')
install.packages('bookdown')
# Load libraries
library('tidyverse')
sites <- read.csv('../h_data/raw/intensives.csv', stringsAsFactors=FALSE)
library('lubridate')
library('knitr')
library('kableExtra')
# Load in used and available points.
avail <- read.csv('../h_data/processed/available_utm.csv', stringsAsFactors=FALSE)
locs <- read.csv('../h_data/processed/used_2_attributes.csv', stringsAsFactors=FALSE)
# Clean up the messy datasets.
avail <- avail %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=0)
used <- locs %>% dplyr::select(canopy.closure=CR_CLOSURE, basal.area=BASAL_AREA, age=PROJ_AGE_1, f_hab=f_hab, n_hab=n_hab, site=site) %>%
mutate(case=1)
# Combine.
points <- bind_rows(used, avail)
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>%
kable(col.names=c('Site abbr.', 'N. roosts'),
caption('Number of roost sites calculated per site/individual bird in 2019')) %>%
kable_styling(full_width=FALSE, position='float_left')
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>%
kable(col.names=c('Site abbr.', 'N. roosts'),
caption='Number of roost sites calculated per site/individual bird in 2019') %>%
kable_styling(full_width=FALSE, position='float_left')
warnings()
warnings()
# Summary table.
locs %>% group_by(site) %>% summarise(n=n()) %>%
kable(col.names=c('Site abbr.', 'N. roosts'),
caption='Number of roost sites calculated per site in 2019') %>%
kable_styling(full_width=FALSE, position='float_left')
